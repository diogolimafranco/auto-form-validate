{"version":3,"sources":["../src/index.js"],"names":["autoFormValidate","form","options","runValidate","types","el","title","dataset","name","charAt","toUpperCase","slice","errors","forEach","type","Validate","isEmpty","value","isCellphone","push","console","log","isHexColor","isCpf","isStringDate","isEmail","isPdf","isVideo","isImage","isStringNumber","isPhone","minChars","min","minlength","maxChars","max","maxlength","isRangeChars","parseInt","minWords","maxWords","isRangeWords","isTime","isUrl","isZip","feedback","changeHandler","event","target","classList","remove","removeEventListener","dialog","length","message","item","concat","alert","idx","add","addEventListener","style","document","createElement","innerHTML","head","append","init","isFeedback","elements","Array","from","validity","split","hasAttribute","indexOf","unshift","result","preventDefault","fail","call","done","querySelectorAll","window","Error"],"mappings":";;;;AAAA,CAAC,YAAM;AACL,MAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,IAAD,EAAOC,OAAP,EAAmB;AAE1C;AACA,QAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAQC,EAAR,EAAe;AACjC,UAAMC,KAAK,GAAGD,EAAE,CAACE,OAAH,CAAWD,KAAX,IAAoBD,EAAE,CAACG,IAAH,CAAQC,MAAR,CAAe,CAAf,EAAkBC,WAAlB,KAAkCL,EAAE,CAACG,IAAH,CAAQG,KAAR,CAAc,CAAd,CAApE;AACA,UAAIC,MAAM,GAAG,EAAb,CAFiC,CAGjC;;AACAR,MAAAA,KAAK,CAACS,OAAN,CAAc,UAAAC,IAAI,EAAI;AACpB,gBAAQA,IAAR;AACE,eAAK,WAAL;AACE,gBAAIC,QAAQ,CAACC,OAAT,CAAiBX,EAAE,CAACY,KAApB,CAAJ,EACE;AACF,gBAAG,CAACF,QAAQ,CAACG,WAAT,CAAqBb,EAAE,CAACY,KAAxB,CAAJ,EACEL,MAAM,CAACO,IAAP,mBAAuBb,KAAvB;AACF;;AACF,eAAK,UAAL;AACE,gBAAIS,QAAQ,CAACC,OAAT,CAAiBX,EAAE,CAACY,KAApB,CAAJ,EACE;AACFG,YAAAA,OAAO,CAACC,GAAR,gCAAoCf,KAApC;AACA;;AACF,eAAK,OAAL;AACE,gBAAIS,QAAQ,CAACC,OAAT,CAAiBX,EAAE,CAACY,KAApB,CAAJ,EACE;AACF,gBAAG,CAACF,QAAQ,CAACO,UAAT,CAAoBjB,EAAE,CAACY,KAAvB,CAAJ,EACEL,MAAM,CAACO,IAAP,mBAAuBb,KAAvB;AACF;;AACF,eAAK,KAAL;AACE,gBAAIS,QAAQ,CAACC,OAAT,CAAiBX,EAAE,CAACY,KAApB,CAAJ,EACE;AACF,gBAAG,CAACF,QAAQ,CAACQ,KAAT,CAAelB,EAAE,CAACY,KAAlB,CAAJ,EACEL,MAAM,CAACO,IAAP,mBAAuBb,KAAvB;AACF;;AACF,eAAK,MAAL;AACE,gBAAIS,QAAQ,CAACC,OAAT,CAAiBX,EAAE,CAACY,KAApB,CAAJ,EACE;AACF,gBAAG,CAACF,QAAQ,CAACS,YAAT,CAAsBnB,EAAE,CAACY,KAAzB,CAAJ,EACEL,MAAM,CAACO,IAAP,mBAAuBb,KAAvB;AACF;;AACF,eAAK,UAAL;AACE,gBAAIS,QAAQ,CAACC,OAAT,CAAiBX,EAAE,CAACY,KAApB,CAAJ,EACE;AACFG,YAAAA,OAAO,CAACC,GAAR,gCAAoCf,KAApC;AACA;;AACF,eAAK,OAAL;AACE,gBAAIS,QAAQ,CAACC,OAAT,CAAiBX,EAAE,CAACY,KAApB,CAAJ,EACE;AACF,gBAAG,CAACF,QAAQ,CAACU,OAAT,CAAiBpB,EAAE,CAACY,KAApB,CAAJ,EACEL,MAAM,CAACO,IAAP,mBAAuBb,KAAvB;AACF;;AACF,eAAK,KAAL;AACE,gBAAIS,QAAQ,CAACC,OAAT,CAAiBX,EAAE,CAACY,KAApB,CAAJ,EACE;AACF,gBAAG,CAACF,QAAQ,CAACW,KAAT,CAAerB,EAAE,CAACY,KAAlB,CAAJ,EACEL,MAAM,CAACO,IAAP,mBAAuBb,KAAvB;AACF;;AACF,eAAK,OAAL;AACE,gBAAIS,QAAQ,CAACC,OAAT,CAAiBX,EAAE,CAACY,KAApB,CAAJ,EACE;AACF,gBAAG,CAACF,QAAQ,CAACY,OAAT,CAAiBtB,EAAE,CAACY,KAApB,CAAJ,EACEL,MAAM,CAACO,IAAP,mBAAuBb,KAAvB;AACF;;AACF,eAAK,OAAL;AACE,gBAAIS,QAAQ,CAACC,OAAT,CAAiBX,EAAE,CAACY,KAApB,CAAJ,EACE;AACF,gBAAG,CAACF,QAAQ,CAACa,OAAT,CAAiBvB,EAAE,CAACY,KAApB,CAAJ,EACEL,MAAM,CAACO,IAAP,mBAAuBb,KAAvB;AACF;;AACF,eAAK,OAAL;AACE,gBAAIS,QAAQ,CAACC,OAAT,CAAiBX,EAAE,CAACY,KAApB,CAAJ,EACE;AACFG,YAAAA,OAAO,CAACC,GAAR,gCAAoCf,KAApC;AACA;;AACF,eAAK,QAAL;AACE,gBAAIS,QAAQ,CAACC,OAAT,CAAiBX,EAAE,CAACY,KAApB,CAAJ,EACE;AACF,gBAAG,CAACF,QAAQ,CAACc,cAAT,CAAwBxB,EAAE,CAACY,KAA3B,CAAJ,EACEL,MAAM,CAACO,IAAP,mBAAuBb,KAAvB;AACF;;AACF,eAAK,UAAL;AACE,gBAAIS,QAAQ,CAACC,OAAT,CAAiBX,EAAE,CAACY,KAApB,CAAJ,EACE;AACFG,YAAAA,OAAO,CAACC,GAAR,gCAAoCf,KAApC;AACA;;AACF,eAAK,OAAL;AACE,gBAAIS,QAAQ,CAACC,OAAT,CAAiBX,EAAE,CAACY,KAApB,CAAJ,EACE;AACF,gBAAG,CAACF,QAAQ,CAACe,OAAT,CAAiBzB,EAAE,CAACY,KAApB,CAAJ,EACEL,MAAM,CAACO,IAAP,mBAAuBb,KAAvB;AACF;;AACF,eAAK,OAAL;AACE,gBAAIS,QAAQ,CAACC,OAAT,CAAiBX,EAAE,CAACY,KAApB,CAAJ,EACE;AACFG,YAAAA,OAAO,CAACC,GAAR,gCAAoCf,KAApC;AACA;;AACF,eAAK,YAAL;AACE,gBAAIS,QAAQ,CAACC,OAAT,CAAiBX,EAAE,CAACY,KAApB,CAAJ,EACE;AACF,gBAAIc,QAAQ,GAAG1B,EAAE,CAAC2B,GAAH,IAAU3B,EAAE,CAAC4B,SAA5B;AACA,gBAAIC,QAAQ,GAAG7B,EAAE,CAAC8B,GAAH,IAAU9B,EAAE,CAAC+B,SAA5B;AACA,gBAAI,CAACrB,QAAQ,CAACsB,YAAT,CAAsBhC,EAAE,CAACY,KAAzB,EAAgCqB,QAAQ,CAACP,QAAD,CAAxC,EAAoDO,QAAQ,CAACJ,QAAD,CAA5D,CAAL,EACEtB,MAAM,CAACO,IAAP,mBAAuBb,KAAvB;AACA;;AACJ,eAAK,YAAL;AACE,gBAAIS,QAAQ,CAACC,OAAT,CAAiBX,EAAE,CAACY,KAApB,CAAJ,EACE;AACF,gBAAIsB,QAAQ,GAAGlC,EAAE,CAAC2B,GAAlB;AACA,gBAAIQ,QAAQ,GAAGnC,EAAE,CAAC8B,GAAlB;AACA,gBAAI,CAACpB,QAAQ,CAAC0B,YAAT,CAAsBpC,EAAE,CAACY,KAAzB,EAAgCqB,QAAQ,CAACC,QAAD,CAAxC,EAAoDD,QAAQ,CAACE,QAAD,CAA5D,CAAL,EACE5B,MAAM,CAACO,IAAP,mBAAuBb,KAAvB;AACA;;AACJ,eAAK,UAAL;AACE,gBAAIS,QAAQ,CAACC,OAAT,CAAiBX,EAAE,CAACY,KAApB,CAAJ,EACEL,MAAM,CAACO,IAAP,mBAAuBb,KAAvB;AACF;;AACF,eAAK,IAAL;AACE,gBAAIS,QAAQ,CAACC,OAAT,CAAiBX,EAAE,CAACY,KAApB,CAAJ,EACE;AACFG,YAAAA,OAAO,CAACC,GAAR,gCAAoCf,KAApC;AACA;;AACF,eAAK,MAAL;AACE,gBAAIS,QAAQ,CAACC,OAAT,CAAiBX,EAAE,CAACY,KAApB,CAAJ,EACE;AACF,gBAAG,CAACF,QAAQ,CAAC2B,MAAT,CAAgBrC,EAAE,CAACY,KAAnB,CAAJ,EACEL,MAAM,CAACO,IAAP,mBAAuBb,KAAvB;AACF;;AACF,eAAK,KAAL;AACE,gBAAIS,QAAQ,CAACC,OAAT,CAAiBX,EAAE,CAACY,KAApB,CAAJ,EACE;AACF,gBAAG,CAACF,QAAQ,CAAC4B,KAAT,CAAetC,EAAE,CAACY,KAAlB,CAAJ,EACEL,MAAM,CAACO,IAAP,mBAAuBb,KAAvB;AACF;;AACF,eAAK,MAAL;AACE,gBAAIS,QAAQ,CAACC,OAAT,CAAiBX,EAAE,CAACY,KAApB,CAAJ,EACE;AACFG,YAAAA,OAAO,CAACC,GAAR,gCAAoCf,KAApC;AACA;;AACF,eAAK,OAAL;AACE,gBAAIS,QAAQ,CAACC,OAAT,CAAiBX,EAAE,CAACY,KAApB,CAAJ,EACE;AACFG,YAAAA,OAAO,CAACC,GAAR,gCAAoCf,KAApC;AACA;;AACF,eAAK,KAAL;AACE,gBAAIS,QAAQ,CAACC,OAAT,CAAiBX,EAAE,CAACY,KAApB,CAAJ,EACE;AACF,gBAAG,CAACF,QAAQ,CAAC6B,KAAT,CAAevC,EAAE,CAACY,KAAlB,CAAJ,EACEL,MAAM,CAACO,IAAP,mBAAuBb,KAAvB;AACF;;AACF;AACE;AA5IJ;AA8ID,OA/ID;AAgJA,aAAO;AACLD,QAAAA,EAAE,EAAEA,EADC;AAELO,QAAAA,MAAM,EAAEA;AAFH,OAAP;AAID,KAxJD,CAH0C,CA6J1C;;;AACA,QAAMiC,QAAQ,GAAG,SAAXA,QAAW,CAAAjC,MAAM,EAAI;AACzB;AACA,UAAMkC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1BC,QAAAA,KAAK,CAACC,MAAN,CAAaC,SAAb,CAAuBC,MAAvB,CAA8B,gBAA9B;AACAH,QAAAA,KAAK,CAACC,MAAN,CAAaG,mBAAb,CAAiC,QAAjC,EAA0CL,aAA1C;AACD,OAHD,CAFyB,CAOzB;;;AACA,UAAMM,MAAM,GAAG,SAATA,MAAS,CAAAxC,MAAM,EAAI;AACvB,YAAIA,MAAM,CAACyC,MAAP,GAAgB,CAApB,EAAsB;AACpB,cAAIC,OAAO,GAAG,oCAAd;AACA1C,UAAAA,MAAM,CAACC,OAAP,CAAe,UAAA0C,IAAI,EAAI;AACrBD,YAAAA,OAAO,IAAIC,IAAI,CAAC3C,MAAL,CAAY4C,MAAZ,CAAmB,IAAnB,CAAX;AACD,WAFD;AAGAC,UAAAA,KAAK,CAACH,OAAD,CAAL;AACD;AACF,OARD,CARyB,CAkBzB;;;AACAF,MAAAA,MAAM,CAACxC,MAAD,CAAN,CAnByB,CAqBzB;;AACAA,MAAAA,MAAM,CAACC,OAAP,CAAe,UAAA6C,GAAG,EAAI;AACpBA,QAAAA,GAAG,CAACrD,EAAJ,CAAO4C,SAAP,CAAiBU,GAAjB,CAAqB,gBAArB;AACAD,QAAAA,GAAG,CAACrD,EAAJ,CAAOuD,gBAAP,CAAwB,QAAxB,EAAkCd,aAAlC;AACD,OAHD;AAID,KA1BD,CA9J0C,CA0L1C;;;AACA,QAAMe,KAAK,GAAG,iBAAM;AAClB,UAAIA,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAZ;AACAF,MAAAA,KAAK,CAACG,SAAN;AAKAF,MAAAA,QAAQ,CAACG,IAAT,CAAcC,MAAd,CAAqBL,KAArB;AACD,KARD,CA3L0C,CAqM1C;;;AACA,QAAMM,IAAI,GAAG,SAAPA,IAAO,CAAApB,KAAK,EAAI;AACpB,UAAM9C,IAAI,GAAG8C,KAAK,CAACC,MAAnB;AACA,UAAMoB,UAAU,GAAGnE,IAAI,CAACM,OAAL,CAAasC,QAAb,GAAwB,IAAxB,GAA+B,KAAlD;AACA,UAAMwB,QAAQ,GAAGC,KAAK,CAACC,IAAN,CAAWtE,IAAI,CAACoE,QAAhB,CAAjB;AACA,UAAMzD,MAAM,GAAG,EAAf;AACAyD,MAAAA,QAAQ,CAACxD,OAAT,CAAiB,UAAAR,EAAE,EAAI;AACrB,YAAID,KAAK,GAAG,EAAZ;AACA,YAAIC,EAAE,CAACE,OAAH,IAAcF,EAAE,CAACE,OAAH,CAAWiE,QAA7B,EACEpE,KAAK,GAAGC,EAAE,CAACE,OAAH,CAAWiE,QAAX,CAAoBC,KAApB,CAA0B,GAA1B,CAAR;AAEF,YAAIpE,EAAE,CAACqE,YAAH,CAAgB,UAAhB,KAA+BtE,KAAK,CAACuE,OAAN,CAAc,UAAd,MAA8B,CAAC,CAAlE,EACEvE,KAAK,CAACwE,OAAN,CAAc,UAAd;AAEF,YAAIC,MAAM,GAAG1E,WAAW,CAACC,KAAD,EAAQC,EAAR,CAAxB;AACA,YAAIwE,MAAM,CAACjE,MAAP,CAAcyC,MAAd,GAAuB,CAA3B,EACEzC,MAAM,CAACO,IAAP,CAAY0D,MAAZ;AACH,OAXD,EALoB,CAkBpB;;AACA,UAAIjE,MAAM,CAACyC,MAAP,GAAgB,CAApB,EAAuB;AACrBN,QAAAA,KAAK,CAAC+B,cAAN,GADqB,CAGrB;;AACA,YAAI5E,OAAO,IAAIA,OAAO,CAAC6E,IAAnB,IAA2B,OAAO7E,OAAO,CAAC6E,IAAf,KAAwB,UAAvD,EAAmE;AACjE7E,UAAAA,OAAO,CAAC6E,IAAR,CAAaC,IAAb,CAAkB,KAAlB,EAAwBpE,MAAxB;AACA;AACD;;AAED,YAAIwD,UAAJ,EAAgB;AACdP,UAAAA,KAAK;AACLhB,UAAAA,QAAQ,CAACjC,MAAD,CAAR;AACA;AACD;AACF,OAjCmB,CAmCpB;;;AACA,UAAIV,OAAO,IAAIA,OAAO,CAAC+E,IAAnB,IAA2B,OAAO/E,OAAO,CAAC+E,IAAf,KAAwB,UAAvD,EAAmE;AACjE/E,QAAAA,OAAO,CAAC+E,IAAR,CAAaD,IAAb,CAAkB,KAAlB,EAAwBjC,KAAxB;AACA;AACD;AACF,KAxCD,CAtM0C,CAgP1C;;;AACA,QAAI9C,IAAJ,EACEA,IAAI,CAAC2D,gBAAL,CAAsB,QAAtB,EAAgCO,IAAhC,EAlPwC,CAoP1C;;AACA,QAAI,CAAClE,IAAL,EAAW;AACTqE,MAAAA,KAAK,CAACC,IAAN,CAAWT,QAAQ,CAACoB,gBAAT,CAA0B,MAA1B,CAAX,EAA8CrE,OAA9C,CAAsD,UAAAZ,IAAI,EAAI;AAC9D,YAAG,CAACkF,MAAM,CAACpE,QAAX,EACI,MAAM,IAAIqE,KAAJ,CAAU,oDAAV,CAAN;AACFnF,QAAAA,IAAI,CAAC2D,gBAAL,CAAsB,QAAtB,EAAgCO,IAAhC;AACD,OAJD;AAKD;AACF,GA5PD;;AA6PAgB,EAAAA,MAAM,CAACnF,gBAAP,GAA0BA,gBAA1B;AACD,CA/PD;;AAiQAmF,MAAM,CAACnF,gBAAP,CAAwB,IAAxB,EAA8B;AAC5BiF,EAAAA,IAAI,EAAE,cAAAlC,KAAK,EAAI;AACbA,IAAAA,KAAK,CAAC+B,cAAN;AACD;AAH2B,CAA9B","sourcesContent":["(() => {\n  const autoFormValidate = (form, options) => {\n\n    // Executa as avalições informadas\n    const runValidate = (types, el) => {\n      const title = el.dataset.title || el.name.charAt(0).toUpperCase() + el.name.slice(1);\n      let errors = []\n      //console.log(`- Aplicando validações no campo ${el.tagName}:${title}`)\n      types.forEach(type => {\n        switch (type) {\n          case 'cellphone':\n            if (Validate.isEmpty(el.value))\n              break\n            if(!Validate.isCellphone(el.value))\n              errors.push(`O campo ${title} não possuí um número de celular válido`)\n            break\n          case 'checkbox':\n            if (Validate.isEmpty(el.value))\n              break\n            console.log(`-- Valida se o campo ${title} foi selecionado corretamente`)\n            break\n          case 'color':\n            if (Validate.isEmpty(el.value))\n              break\n            if(!Validate.isHexColor(el.value))\n              errors.push(`O campo ${title} não possuí uma cor hexadecimal válido`)\n            break\n          case 'cpf':\n            if (Validate.isEmpty(el.value))\n              break\n            if(!Validate.isCpf(el.value))\n              errors.push(`O campo ${title} não é um número de cpf válido`)\n            break\n          case 'date':\n            if (Validate.isEmpty(el.value))\n              break\n            if(!Validate.isStringDate(el.value))\n              errors.push(`O campo ${title} não é uma data válida no formato dd/mm/yyyy`)\n            break\n          case 'datetime':\n            if (Validate.isEmpty(el.value))\n              break\n            console.log(`-- Valida se o campo ${title} é uma data-hora válida no formato dd/mm/yyyy hh:mm`)\n            break\n          case 'email':\n            if (Validate.isEmpty(el.value))\n              break\n            if(!Validate.isEmail(el.value))\n              errors.push(`O campo ${title} não é um endereço de e-mail válido`)\n            break\n          case 'pdf':\n            if (Validate.isEmpty(el.value))\n              break\n            if(!Validate.isPdf(el.value))\n              errors.push(`O campo ${title} não é um arquivo do tipo pdf`)\n            break\n          case 'video':\n            if (Validate.isEmpty(el.value))\n              break\n            if(!Validate.isVideo(el.value))\n              errors.push(`O campo ${title} não é um arquivo do tipo vídeo`)\n            break\n          case 'image':\n            if (Validate.isEmpty(el.value))\n              break\n            if(!Validate.isImage(el.value))\n              errors.push(`O campo ${title} não é um arquivo do tipo imagem`)\n            break\n          case 'month':\n            if (Validate.isEmpty(el.value))\n              break\n            console.log(`-- Valida se o campo ${title} é uma mês válido no formato número`)\n            break\n          case 'number':\n            if (Validate.isEmpty(el.value))\n              break\n            if(!Validate.isStringNumber(el.value))\n              errors.push(`O campo ${title} não é um numero inteiro válido`)\n            break\n          case 'password':\n            if (Validate.isEmpty(el.value))\n              break\n            console.log(`-- Valida se o campo ${title} é um password válido com base no número de caracteres`)\n            break\n          case 'phone':\n            if (Validate.isEmpty(el.value))\n              break\n            if(!Validate.isPhone(el.value))\n              errors.push(`O campo ${title} não é um número de telefone fixo válido`)\n            break\n          case 'radio':\n            if (Validate.isEmpty(el.value))\n              break\n            console.log(`-- Valida se o campo ${title} é radio vou respondido`)\n            break\n          case 'rangechars':\n            if (Validate.isEmpty(el.value))\n              break\n            let minChars = el.min || el.minlength\n            let maxChars = el.max || el.maxlength\n            if (!Validate.isRangeChars(el.value, parseInt(minChars), parseInt(maxChars)))\n              errors.push(`O campo ${title} não atende o número minímo ou máximo de caracteres`)\n              break\n          case 'rangewords':\n            if (Validate.isEmpty(el.value))\n              break\n            let minWords = el.min\n            let maxWords = el.max\n            if (!Validate.isRangeWords(el.value, parseInt(minWords), parseInt(maxWords)))\n              errors.push(`O campo ${title} não atende o número minímo ou máximo de palavras`)\n              break\n          case 'required':\n            if (Validate.isEmpty(el.value))\n              errors.push(`O campo ${title} não pode estar vazio`)\n            break\n          case 'rg':\n            if (Validate.isEmpty(el.value))\n              break\n            console.log(`-- Valida se o campo ${title} é RG válido`)\n            break\n          case 'time':\n            if (Validate.isEmpty(el.value))\n              break\n            if(!Validate.isTime(el.value))\n              errors.push(`O campo ${title} não é uma hora válido`)\n            break\n          case 'url':\n            if (Validate.isEmpty(el.value))\n              break\n            if(!Validate.isUrl(el.value))\n              errors.push(`O campo ${title} não é uma url válido`)\n            break\n          case 'week':\n            if (Validate.isEmpty(el.value))\n              break\n            console.log(`-- Valida se o campo ${title} é um dia da semana válido`)\n            break\n          case 'words':\n            if (Validate.isEmpty(el.value))\n              break\n            console.log(`-- Valida se o campo ${title} atende o número minímo e máximo de palavras na string`)\n            break\n          case 'zip':\n            if (Validate.isEmpty(el.value))\n              break\n            if(!Validate.isZip(el.value))\n              errors.push(`O campo ${title} não possuí um número de cep válido`)\n            break\n          default:\n            break\n        }\n      })\n      return {\n        el: el,\n        errors: errors\n      }\n    }\n\n    // Caso feedback esteja ativo, apresenta as mensagens de erro com feedback color red no campo validado\n    const feedback = errors => {\n      // Escuta o evento change dos campos inválidos\n      const changeHandler = () => {\n        event.target.classList.remove('validity-error')\n        event.target.removeEventListener('change',changeHandler)\n      }\n\n      // Abre a janela para apresentação dos erros\n      const dialog = errors => {\n        if (errors.length > 0){\n          let message = 'Ops! Encontramos alguns erros \\n\\n'\n          errors.forEach(item => {\n            message += item.errors.concat('\\n')\n          })\n          alert(message)\n        }\n      }\n\n      // Mostra os erros\n      dialog(errors)\n\n      // Varre os inputs inválidos para aplicar a class de feedback validity-error\n      errors.forEach(idx => {\n        idx.el.classList.add('validity-error')\n        idx.el.addEventListener('change', changeHandler)\n      })\n    }\n\n    // Insere no head da página o style necessário\n    const style = () => {\n      let style = document.createElement('style')\n      style.innerHTML = `.validity-error {\n          -webkit-box-shadow: 0px 0px 5px 1px rgba(255,5,5,1);\n          -moz-box-shadow: 0px 0px 5px 1px rgba(255,5,5,1);\n          box-shadow: 0px 0px 5px 1px rgba(255,5,5,1);\n        }`\n      document.head.append(style)\n    }\n\n    // Inicia a validação do formulário\n    const init = event => {\n      const form = event.target\n      const isFeedback = form.dataset.feedback ? true : false\n      const elements = Array.from(form.elements)\n      const errors = []\n      elements.forEach(el => {\n        let types = []\n        if (el.dataset && el.dataset.validity)\n          types = el.dataset.validity.split(' ')\n\n        if (el.hasAttribute('required') && types.indexOf('required') === -1)\n          types.unshift('required')\n\n        let result = runValidate(types, el)\n        if (result.errors.length > 0)\n          errors.push(result)\n      })\n\n      // Se foram encontrados erros\n      if (errors.length > 0) {\n        event.preventDefault()\n\n        // Se uma função de callback erro foi definida\n        if (options && options.fail && typeof options.fail === 'function') {\n          options.fail.call(this, errors)\n          return\n        }\n\n        if (isFeedback) {\n          style()\n          feedback(errors)\n          return\n        }\n      }\n\n      // Se função de callback de sucesso foi definida\n      if (options && options.done && typeof options.done === 'function') {\n        options.done.call(this, event)\n        return\n      }\n    }\n\n    // Se informado um formulário específico\n    if (form) \n      form.addEventListener('submit', init)\n\n    // Se formulário não informado, aplicamos à todos os forms da página\n    if (!form) {\n      Array.from(document.querySelectorAll('form')).forEach(form => {\n      if(!window.Validate)\n          throw new Error('Lib Validate.js não foi encontrada neste documento')\n        form.addEventListener('submit', init)\n      })\n    }\n  }\n  window.autoFormValidate = autoFormValidate\n})()\n\nwindow.autoFormValidate(null, {\n  done: event => {\n    event.preventDefault()  \n  }\n})"],"file":"index.js"}